import { Application, Router } from "https://deno.land/x/oak@v12.6.1/mod.ts";
import { oakCors } from "https://deno.land/x/cors@v1.2.2/mod.ts";
import { MongoClient, Database } from "https://deno.land/x/mongo@v0.31.2/mod.ts";

// –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–æ–≤
import gymRoutes from "./routes/gymRoutes.ts";

const app = new Application();
const PORT = Deno.env.get("PORT") || 8000;
const MONGO_URI = Deno.env.get("MONGO_URI") || "mongodb://localhost:27017";
const DB_NAME = "gym_booking";

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
const client = new MongoClient();
let db: Database;

try {
  await client.connect(MONGO_URI);
  db = client.database(DB_NAME);
  console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB");
} catch (error) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:", error);
}

// Middleware –¥–ª—è CORS
app.use(
  oakCors({
    origin: ["http://localhost:5180"],
    methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"],
    allowedHeaders: ["Content-Type"],
    credentials: true,
    optionsSuccessStatus: 200
  })
);

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(async (ctx, next) => {
  console.log(`${ctx.request.method} ${ctx.request.url}`);
  try {
    await next();
  } catch (err) {
    console.error(err);
    throw err;
  }
});

// Middleware –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
app.use(async (ctx, next) => {
  ctx.state.db = db;
  await next();
});

// –°–æ–∑–¥–∞–µ–º API —Ä–æ—É—Ç–µ—Ä
const apiRouter = new Router({ prefix: "/api" });

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
apiRouter.use("/gyms", gymRoutes.routes());
apiRouter.use("/gyms", gymRoutes.allowedMethods());

// –ü–æ–¥–∫–ª—é—á–∞–µ–º API —Ä–æ—É—Ç–µ—Ä –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
app.use(apiRouter.routes());
app.use(apiRouter.allowedMethods());

console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);

await app.listen({ port: Number(PORT) }); 